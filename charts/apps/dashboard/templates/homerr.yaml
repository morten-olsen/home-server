apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-{{ .Release.Name }}-homarr-configs
  labels:
    storage.k8s.io/name: nfs
    storage.k8s.io/part-of: kubernetes-complete-reference
    storage.k8s.io/created-by: ssbostan
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs-client
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-{{ .Release.Name }}-homarr-data
  labels:
    storage.k8s.io/name: nfs
    storage.k8s.io/part-of: kubernetes-complete-reference
    storage.k8s.io/created-by: ssbostan
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs-client
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-{{ .Release.Name }}-homarr-icons
  labels:
    storage.k8s.io/name: nfs
    storage.k8s.io/part-of: kubernetes-complete-reference
    storage.k8s.io/created-by: ssbostan
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs-client
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-homarr-deployment"
spec:
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-homarr-pod"
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-homarr-pod"
    spec:
      containers:
        - image: ghcr.io/ajnart/homarr:0.14.1
          imagePullPolicy: Always
          name: "{{ .Release.Name }}-homarr"
          ports:
            - containerPort: 7575
          volumeMounts:
            - mountPath: /app/data/configs
              name: configs 
          volumeMounts:
            - mountPath: /data
              name: data 
          volumeMounts:
            - mountPath: /app/public/icons
              name: icons
      volumes:
        - name: configs
          persistentVolumeClaim:
            claimName: "pvc-{{ .Release.Name }}-homarr-configs"
        - name: data 
          persistentVolumeClaim:
            claimName: "pvc-{{ .Release.Name }}-homarr-data"
        - name: icons
          persistentVolumeClaim:
            claimName: "pvc-{{ .Release.Name }}-homarr-icons"

---

apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-homarr-svc"
spec:
  ports:
    - port: 80
      targetPort: 7575
      protocol: TCP
  selector:
    app: "{{ .Release.Name }}-homarr-pod"

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ .Release.Name }}-homarr-ingress"
  annotations:
    cert-manager.io/issuer: "{{ .Values.issuer }}"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "*.{{ .Values.domain }}"
        - "{{ .Values.domain }}"
      secretName: "tls-secret"
  rules:
    - host: "{{ .Values.subdomain }}.{{ .Values.domain }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: "{{ .Release.Name }}-homarr-svc"
                port:
                  number: 80
