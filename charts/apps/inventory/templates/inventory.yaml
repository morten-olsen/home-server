apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-{{ .Release.Name }}-homebox-data
  labels:
    storage.k8s.io/name: nfs
    storage.k8s.io/part-of: kubernetes-complete-reference
    storage.k8s.io/created-by: ssbostan
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs-client
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-homebox-deployment"
spec:
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-homebox-pod"
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-homebox-pod"
    spec:
      containers:
        - image: ghcr.io/hay-kot/homebox:v0.10.2
          imagePullPolicy: Always
          name: "{{ .Release.Name }}-homebox"
          env:
            - name: HBOX_OPTIONS_ALLOW_REGISTRATION
              value: 'false'
          ports:
            - containerPort: 7745
          volumeMounts:
            - mountPath: /data/
              name: data 
      volumes:
        - name: data 
          persistentVolumeClaim:
            claimName: "pvc-{{ .Release.Name }}-homebox-data"

---

apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-homebox-svc"
spec:
  ports:
    - port: 80
      targetPort: 7745
      protocol: TCP
  selector:
    app: "{{ .Release.Name }}-homebox-pod"

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ .Release.Name }}-homebox-ingress"
  annotations:
    cert-manager.io/issuer: "{{ .Values.issuer }}"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "*.{{ .Values.domain }}"
        - "{{ .Values.domain }}"
      secretName: "tls-secret"
  rules:
    - host: "{{ .Values.subdomain }}.{{ .Values.domain }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: "{{ .Release.Name }}-homebox-svc"
                port:
                  number: 80
